{"version":3,"file":"server.js","sources":["../../server.js"],"sourcesContent":["\r\n\r\n\r\nexport const createRequestHandler = (\r\n    build,\r\n    mode\r\n  ) => {\r\n    let _build;\r\n    let routes = [];\r\n    let serverMode;\r\n    let staticHandler;\r\n    let errorHandler;\r\n  \r\n    return async function requestHandler(\r\n      request,\r\n      loadContext = {},\r\n      { __criticalCss: criticalCss } = {}\r\n    ) {\r\n      _build = typeof build === \"function\" ? await build() : build;\r\n      if (typeof build === \"function\") {\r\n        let derived = derive(_build, mode);\r\n        routes = derived.routes;\r\n        serverMode = derived.serverMode;\r\n        staticHandler = derived.staticHandler;\r\n        errorHandler = derived.errorHandler;\r\n      } else if (!routes || !serverMode || !staticHandler || !errorHandler) {\r\n        let derived = derive(_build, mode);\r\n        routes = derived.routes;\r\n        serverMode = derived.serverMode;\r\n        staticHandler = derived.staticHandler;\r\n        errorHandler = derived.errorHandler;\r\n      }\r\n  \r\n      let url = new URL(request.url);\r\n  \r\n      let matches = matchServerRoutes(routes, url.pathname);\r\n      let handleError = (error) =>\r\n        errorHandler(error, {\r\n          context: loadContext,\r\n          params: matches && matches.length > 0 ? matches[0].params : {},\r\n          request,\r\n        });\r\n  \r\n      let response;\r\n      if (url.searchParams.has(\"_data\")) {\r\n        let routeId = url.searchParams.get(\"_data\");\r\n  \r\n        response = await handleDataRequestRR(\r\n          serverMode,\r\n          staticHandler,\r\n          routeId,\r\n          request,\r\n          loadContext,\r\n          handleError\r\n        );\r\n  \r\n        if (_build.entry.module.handleDataRequest) {\r\n          response = await _build.entry.module.handleDataRequest(response, {\r\n            context: loadContext,\r\n            params: matches?.find((m) => m.route.id == routeId)?.params || {},\r\n            request,\r\n          });\r\n        }\r\n      } else if (\r\n        matches &&\r\n        matches[matches.length - 1].route.module.default == null &&\r\n        matches[matches.length - 1].route.module.ErrorBoundary == null\r\n      ) {\r\n        response = await handleResourceRequestRR(\r\n          serverMode,\r\n          staticHandler,\r\n          matches.slice(-1)[0].route.id,\r\n          request,\r\n          loadContext,\r\n          handleError\r\n        );\r\n      } else {\r\n        response = await handleDocumentRequestRR(\r\n          serverMode,\r\n          _build,\r\n          staticHandler,\r\n          request,\r\n          loadContext,\r\n          handleError,\r\n          criticalCss\r\n        );\r\n      }\r\n  \r\n      if (request.method === \"HEAD\") {\r\n        return new Response(null, {\r\n          headers: response.headers,\r\n          status: response.status,\r\n          statusText: response.statusText,\r\n        });\r\n      }\r\n  \r\n      return response;\r\n    };\r\n  };\r\n\r\n  \r\nasync function handleDataRequestRR(\r\n    serverMode,\r\n    staticHandler,\r\n    routeId,\r\n    request,\r\n    loadContext,\r\n    handleError\r\n  ) {\r\n    try {\r\n      let response = await staticHandler.queryRoute(request, {\r\n        routeId,\r\n        requestContext: loadContext,\r\n      });\r\n  \r\n      if (isRedirectResponse(response)) {\r\n        // We don't have any way to prevent a fetch request from following\r\n        // redirects. So we use the `X-Remix-Redirect` header to indicate the\r\n        // next URL, and then \"follow\" the redirect manually on the client.\r\n        let headers = new Headers(response.headers);\r\n        headers.set(\"X-Remix-Redirect\", headers.get(\"Location\"));\r\n        headers.set(\"X-Remix-Status\", response.status);\r\n        headers.delete(\"Location\");\r\n        if (response.headers.get(\"Set-Cookie\") !== null) {\r\n          headers.set(\"X-Remix-Revalidate\", \"yes\");\r\n        }\r\n  \r\n        return new Response(null, {\r\n          status: 204,\r\n          headers,\r\n        });\r\n      }\r\n  \r\n      if (DEFERRED_SYMBOL in response) {\r\n        let deferredData = response[DEFERRED_SYMBOL];\r\n        let body = createDeferredReadableStream(\r\n          deferredData,\r\n          request.signal,\r\n          serverMode\r\n        );\r\n        let init = deferredData.init || {};\r\n        let headers = new Headers(init.headers);\r\n        headers.set(\"Content-Type\", \"text/remix-deferred\");\r\n        // Mark successful responses with a header so we can identify in-flight\r\n        // network errors that are missing this header\r\n        headers.set(\"X-Remix-Response\", \"yes\");\r\n        init.headers = headers;\r\n        return new Response(body, init);\r\n      }\r\n  \r\n      // Mark all successful responses with a header so we can identify in-flight\r\n      // network errors that are missing this header\r\n      response.headers.set(\"X-Remix-Response\", \"yes\");\r\n      return response;\r\n    } catch (error) {\r\n      if (isResponse(error)) {\r\n        error.headers.set(\"X-Remix-Catch\", \"yes\");\r\n        return error;\r\n      }\r\n  \r\n      if (isRouteErrorResponse(error)) {\r\n        if (error) {\r\n          handleError(error);\r\n        }\r\n        return errorResponseToJson(error, serverMode);\r\n      }\r\n  \r\n      let errorInstance =\r\n        error instanceof Error ? error : new Error(\"Unexpected Server Error\");\r\n      handleError(errorInstance);\r\n      return routerJson(serializeError(errorInstance, serverMode), {\r\n        status: 500,\r\n        headers: {\r\n          \"X-Remix-Error\": \"yes\",\r\n        },\r\n      });\r\n    }\r\n  }\r\n  \r\n  async function handleDocumentRequestRR(\r\n    serverMode,\r\n    build,\r\n    staticHandler,\r\n    request,\r\n    loadContext,\r\n    handleError,\r\n    criticalCss\r\n  ) {\r\n    let context;\r\n    try {\r\n      context = await staticHandler.query(request, {\r\n        requestContext: loadContext,\r\n      });\r\n    } catch (error) {\r\n      handleError(error);\r\n      return new Response(null, { status: 500 });\r\n    }\r\n  \r\n    if (isResponse(context)) {\r\n      return context;\r\n    }\r\n  \r\n    // Sanitize errors outside of development environments\r\n    if (context.errors) {\r\n      Object.values(context.errors).forEach((err) => {\r\n        // @ts-expect-error This is \"private\" from users but intended for internal use\r\n        if (!isRouteErrorResponse(err) || err.error) {\r\n          handleError(err);\r\n        }\r\n      });\r\n      context.errors = sanitizeErrors(context.errors, serverMode);\r\n    }\r\n  \r\n    let headers = getDocumentHeadersRR(build, context);\r\n  \r\n    let entryContext = {\r\n      manifest: build.assets,\r\n      routeModules: createEntryRouteModules(build.routes),\r\n      staticHandlerContext: context,\r\n      criticalCss,\r\n      serverHandoffString: createServerHandoffString({\r\n        url: context.location.pathname,\r\n        criticalCss,\r\n        state: {\r\n          loaderData: context.loaderData,\r\n          actionData: context.actionData,\r\n          errors: serializeErrors(context.errors, serverMode),\r\n        },\r\n        future: build.future,\r\n      }),\r\n      future: build.future,\r\n      serializeError: (err) => serializeError(err, serverMode),\r\n    };\r\n  \r\n    let handleDocumentRequestFunction = build.entry.module.default;\r\n    try {\r\n      return await handleDocumentRequestFunction(\r\n        request,\r\n        context.statusCode,\r\n        headers,\r\n        entryContext,\r\n        loadContext\r\n      );\r\n    } catch (error) {\r\n      handleError(error);\r\n  \r\n      // Get a new StaticHandlerContext that contains the error at the right boundary\r\n      context = getStaticContextFromError(\r\n        staticHandler.dataRoutes,\r\n        context,\r\n        error\r\n      );\r\n  \r\n      // Sanitize errors outside of development environments\r\n      if (context.errors) {\r\n        context.errors = sanitizeErrors(context.errors, serverMode);\r\n      }\r\n  \r\n      // Update entryContext for the second render pass\r\n      entryContext = {\r\n        ...entryContext,\r\n        staticHandlerContext: context,\r\n        serverHandoffString: createServerHandoffString({\r\n          url: context.location.pathname,\r\n          state: {\r\n            loaderData: context.loaderData,\r\n            actionData: context.actionData,\r\n            errors: serializeErrors(context.errors, serverMode),\r\n          },\r\n          future: build.future,\r\n        }),\r\n      };\r\n  \r\n      try {\r\n        return await handleDocumentRequestFunction(\r\n          request,\r\n          context.statusCode,\r\n          headers,\r\n          entryContext,\r\n          loadContext\r\n        );\r\n      } catch (error) {\r\n        handleError(error);\r\n        return returnLastResortErrorResponse(error, serverMode);\r\n      }\r\n    }\r\n  }\r\n  \r\n  async function handleResourceRequestRR(\r\n    serverMode,\r\n    staticHandler,\r\n    routeId,\r\n    request,\r\n    loadContext,\r\n    handleError\r\n  ) {\r\n    try {\r\n      // Note we keep the routeId here to align with the Remix handling of\r\n      // resource routes which doesn't take ?index into account and just takes\r\n      // the leaf match\r\n      let response = await staticHandler.queryRoute(request, {\r\n        routeId,\r\n        requestContext: loadContext,\r\n      });\r\n      // callRouteLoader/callRouteAction always return responses\r\n      invariant(\r\n        isResponse(response),\r\n        \"Expected a Response to be returned from queryRoute\"\r\n      );\r\n      return response;\r\n    } catch (error) {\r\n      if (isResponse(error)) {\r\n        // Note: Not functionally required but ensures that our response headers\r\n        // match identically to what Remix returns\r\n        error.headers.set(\"X-Remix-Catch\", \"yes\");\r\n        return error;\r\n      }\r\n  \r\n      if (isRouteErrorResponse(error)) {\r\n        if (error) {\r\n          handleError(error);\r\n        }\r\n        return errorResponseToJson(error, serverMode);\r\n      }\r\n  \r\n      handleError(error);\r\n      return returnLastResortErrorResponse(error, serverMode);\r\n    }\r\n  }"],"names":[],"mappings":"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"}